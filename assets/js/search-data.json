{"0": {
    "doc": "Centos",
    "title": "CentOS server setup",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/operating-systems/centos/#centos-server-setup",
    "relUrl": "/docs/operating-systems/centos/#centos-server-setup"
  },"1": {
    "doc": "Centos",
    "title": "Table of contents",
    "content": ". | Overwiew | . ",
    "url": "https://lopeaa.github.io/docs/operating-systems/centos/#table-of-contents",
    "relUrl": "/docs/operating-systems/centos/#table-of-contents"
  },"2": {
    "doc": "Centos",
    "title": "Overwiew",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/operating-systems/centos/#overwiew",
    "relUrl": "/docs/operating-systems/centos/#overwiew"
  },"3": {
    "doc": "Centos",
    "title": "Centos",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/operating-systems/centos/",
    "relUrl": "/docs/operating-systems/centos/"
  },"4": {
    "doc": "Certificate Authority",
    "title": "Certificate Authority Management GUI",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority#certificate-authority-management-gui",
    "relUrl": "/docs/certificate-authority#certificate-authority-management-gui"
  },"5": {
    "doc": "Certificate Authority",
    "title": "Table of contents",
    "content": ". | Overwiew | . ",
    "url": "https://lopeaa.github.io/docs/certificate-authority#table-of-contents",
    "relUrl": "/docs/certificate-authority#table-of-contents"
  },"6": {
    "doc": "Certificate Authority",
    "title": "Overwiew",
    "content": "This project aims to simplify the management of the digital certificates lifecycle such as creation of keypairs (csr, private and private keys), signing of csr files created in external systems as well as generating csr by your own private CA. It also includes tools to generate of PFX/P12 archive, keymatch, expiry notifications, converter, decode nad more… . ",
    "url": "https://lopeaa.github.io/docs/certificate-authority#overwiew",
    "relUrl": "/docs/certificate-authority#overwiew"
  },"7": {
    "doc": "Certificate Authority",
    "title": "Certificate Authority",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority",
    "relUrl": "/docs/certificate-authority"
  },"8": {
    "doc": "Code Snippets",
    "title": "MVC Architecture",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code-snippets/code-snippets/#mvc-architecture",
    "relUrl": "/docs/certificate-authority/code-snippets/code-snippets/#mvc-architecture"
  },"9": {
    "doc": "Code Snippets",
    "title": "Table of contents",
    "content": ". | Model | View | Controller | . ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code-snippets/code-snippets/#table-of-contents",
    "relUrl": "/docs/certificate-authority/code-snippets/code-snippets/#table-of-contents"
  },"10": {
    "doc": "Code Snippets",
    "title": "Model",
    "content": "The model contains all the data-related logic that the user works with, like the schemas and interfaces of a project, the databases, and their fields. For example, a customer object will retrieve the customer information from the database, manipulate or update their record in the database, or use it to render data. ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code-snippets/code-snippets/#model",
    "relUrl": "/docs/certificate-authority/code-snippets/code-snippets/#model"
  },"11": {
    "doc": "Code Snippets",
    "title": "View",
    "content": "The view contains the UI and the presentation of an application. For example, the customer view will include all the UI components such as text boxes, dropdowns, and other things that the user interacts with. ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code-snippets/code-snippets/#view",
    "relUrl": "/docs/certificate-authority/code-snippets/code-snippets/#view"
  },"12": {
    "doc": "Code Snippets",
    "title": "Controller",
    "content": "The controller’s responsibility is to pull, modify, and provide data to the user. Essentially, the controller is the link between the view and model. Through getter and setter functions, the controller pulls data from the model and initializes the views. If there are any updates from the views, it modifies the data with a setter function. ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code-snippets/code-snippets/#controller",
    "relUrl": "/docs/certificate-authority/code-snippets/code-snippets/#controller"
  },"13": {
    "doc": "Code Snippets",
    "title": "Code Snippets",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code-snippets/code-snippets/",
    "relUrl": "/docs/certificate-authority/code-snippets/code-snippets/"
  },"14": {
    "doc": "Color",
    "title": "Color Utilities",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/utilities/color/#color-utilities",
    "relUrl": "/docs/utilities/color/#color-utilities"
  },"15": {
    "doc": "Color",
    "title": "Table of contents",
    "content": ". | Light Greys | Dark Greys | Purples | Blues | Greens | Yellows | Reds | . All the colors used in Just the Docs have been systematized into a series of variables that have been extended to both font color and background color utility classes. ",
    "url": "https://lopeaa.github.io/docs/utilities/color/#table-of-contents",
    "relUrl": "/docs/utilities/color/#table-of-contents"
  },"16": {
    "doc": "Color",
    "title": "Light Greys",
    "content": "| Color value | Font color utility | Background color utility | . | grey-lt-000 | .text-grey-lt-000 | .bg-grey-lt-000 | . | grey-lt-100 | .text-grey-lt-100 | .bg-grey-lt-100 | . | grey-lt-200 | .text-grey-lt-200 | .bg-grey-lt-200 | . | grey-lt-300 | .text-grey-lt-300 | .bg-grey-lt-300 | . ",
    "url": "https://lopeaa.github.io/docs/utilities/color/#light-greys",
    "relUrl": "/docs/utilities/color/#light-greys"
  },"17": {
    "doc": "Color",
    "title": "Dark Greys",
    "content": "| Color value | Font color utility | Background color utility | . | grey-dk-000 | .text-grey-dk-000 | .bg-grey-dk-000 | . | grey-dk-100 | .text-grey-dk-100 | .bg-grey-dk-100 | . | grey-dk-200 | .text-grey-dk-200 | .bg-grey-dk-200 | . | grey-dk-250 | .text-grey-dk-250 | .bg-grey-dk-250 | . | grey-dk-300 | .text-grey-dk-300 | .bg-grey-dk-300 | . ",
    "url": "https://lopeaa.github.io/docs/utilities/color/#dark-greys",
    "relUrl": "/docs/utilities/color/#dark-greys"
  },"18": {
    "doc": "Color",
    "title": "Purples",
    "content": "| Color value | Font color utility | Background color utility | . | purple-000 | .text-purple-000 | .bg-purple-000 | . | purple-100 | .text-purple-100 | .bg-purple-100 | . | purple-200 | .text-purple-200 | .bg-purple-200 | . | purple-300 | .text-purple-300 | .bg-purple-300 | . ",
    "url": "https://lopeaa.github.io/docs/utilities/color/#purples",
    "relUrl": "/docs/utilities/color/#purples"
  },"19": {
    "doc": "Color",
    "title": "Blues",
    "content": "| Color value | Font color utility | Background color utility | . | blue-000 | .text-blue-000 | .bg-blue-000 | . | blue-100 | .text-blue-100 | .bg-blue-100 | . | blue-200 | .text-blue-200 | .bg-blue-200 | . | blue-300 | .text-blue-300 | .bg-blue-300 | . ",
    "url": "https://lopeaa.github.io/docs/utilities/color/#blues",
    "relUrl": "/docs/utilities/color/#blues"
  },"20": {
    "doc": "Color",
    "title": "Greens",
    "content": "| Color value | Font color utility | Background color utility | . | green-000 | .text-green-000 | .bg-green-000 | . | green-100 | .text-green-100 | .bg-green-100 | . | green-200 | .text-green-200 | .bg-green-200 | . | green-300 | .text-green-300 | .bg-green-300 | . ",
    "url": "https://lopeaa.github.io/docs/utilities/color/#greens",
    "relUrl": "/docs/utilities/color/#greens"
  },"21": {
    "doc": "Color",
    "title": "Yellows",
    "content": "| Color value | Font color utility | Background color utility | . | yellow-000 | .text-yellow-000 | .bg-yellow-000 | . | yellow-100 | .text-yellow-100 | .bg-yellow-100 | . | yellow-200 | .text-yellow-200 | .bg-yellow-200 | . | yellow-300 | .text-yellow-300 | .bg-yellow-300 | . ",
    "url": "https://lopeaa.github.io/docs/utilities/color/#yellows",
    "relUrl": "/docs/utilities/color/#yellows"
  },"22": {
    "doc": "Color",
    "title": "Reds",
    "content": "| Color value | Font color utility | Background color utility | . | red-000 | .text-red-000 | .bg-red-000 | . | red-100 | .text-red-100 | .bg-red-100 | . | red-200 | .text-red-200 | .bg-red-200 | . | red-300 | .text-red-300 | .bg-red-300 | . ",
    "url": "https://lopeaa.github.io/docs/utilities/color/#reds",
    "relUrl": "/docs/utilities/color/#reds"
  },"23": {
    "doc": "Color",
    "title": "Color",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/utilities/color/",
    "relUrl": "/docs/utilities/color/"
  },"24": {
    "doc": "Controllers Snippets",
    "title": "Certificate Authority Controllers",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code/controllers/#certificate-authority-controllers",
    "relUrl": "/docs/certificate-authority/code/controllers/#certificate-authority-controllers"
  },"25": {
    "doc": "Controllers Snippets",
    "title": "Table of contents",
    "content": ". | CertificatesController.php | SigningRequestController.php | NewSigningRequestController.php | JarSigningController.php | AuthenticodeController.php | . ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code/controllers/#table-of-contents",
    "relUrl": "/docs/certificate-authority/code/controllers/#table-of-contents"
  },"26": {
    "doc": "Controllers Snippets",
    "title": "CertificatesController.php",
    "content": "This Controller creates certificates keypair and the corresponding certificate public key in one step. It is zipped and saved in the “/storage/archives/” folder. path: /App/Controller/Admin/CertificatesController.php . &lt;?php namespace App\\Http\\Controllers\\Admin; use App\\Http\\Controllers\\Controller; use App\\Http\\Requests\\MassDestroyCertificateKeyPair; use App\\Http\\Requests\\StoreCertificateKeyPair; use App\\Http\\Requests\\UpdateCertificate; use App\\Cert; use App\\Params; use Carbon\\Carbon; class CertificatesController extends Controller { public function index() { abort_unless(\\Gate::allows('certificate_access'), 403); $certsNumber = Cert::all()-&gt;count(); $certs = Cert::all(); // Chart - Certificates status. $certs_status_blank = Cert::where('status', '=', null)-&gt;count(); $certs_status_valid = Cert::where('status', '=', 'Valid')-&gt;count(); $certs_status_expiring = Cert::where('status', '=', 'Expiring')-&gt;count(); $certs_status_expired = Cert::where('status', '=', 'Expired')-&gt;count(); $certs_status_revoked = Cert::where('status', '=', 'Revoked')-&gt;count(); //dd($certs); return view('admin.certs.index', compact('certs', 'certsNumber', 'certs_status_blank', 'certs_status_valid', 'certs_status_expiring', 'certs_status_expired', 'certs_status_revoked' )); } public function create() { abort_unless(\\Gate::allows('certificate_create'), 403); $params = Params::all(); return view('admin.certs.new-cert.create', compact('params')); } public function store(StoreCertificateKeyPair $request) { abort_unless(\\Gate::allows('certificate_create'), 403); // Separate CN and SANs. $commonName = explode(\";\", $request-&gt;subjectCommonName); $subjectCommonName = $commonName[0]; //separated cn $extensionsSubjectAltName = explode(\",\", (\"DNS:\".implode(\",DNS:\", $commonName))); $extensionsSubjectAltName = implode(\",\", $extensionsSubjectAltName); // Separated SANs $config = $OPENSSL_CONFIG; // Check if CN already exists. Cert::where('subjectCommonName', '=', $subjectCommonName); Cert::where('subjectCommonName', '=', $request-&gt;status); /** Data needed to populate the certificate signed by this CA. email can´t be empty so if it is empty \"emailAddress\" is not included. **/ if($request-&gt;email != ''){ $dn = array( \"countryName\" =&gt; $countryName, \"stateOrProvinceName\" =&gt; $stateOrProvinceName, \"localityName\" =&gt; $localityName, \"organizationName\" =&gt; $request-&gt;subjectOrganization, \"organizationalUnitName\" =&gt; $orgUnitName, \"commonName\" =&gt; $subjectCommonName, \"emailAddress\" =&gt; $request-&gt;email ); } else { $dn = array( \"countryName\" =&gt; $countryName, \"stateOrProvinceName\" =&gt; $stateOrProvinceName, \"localityName\" =&gt; $localityName, \"organizationName\" =&gt; $request-&gt;subjectOrganization, \"organizationalUnitName\" =&gt; $orgUnitName, \"commonName\" =&gt; $subjectCommonName, \"emailAddress\" =&gt; null ); } /** Clean DNS entries. **/ shell_exec(\"/opt/subjectAltNameRemoval.sh 2&gt;&amp;1\"); $configFile = file_get_contents($config); $configFile = str_replace(\"DNS:\", $extensionsSubjectAltName, $configFile); file_put_contents($config, $configFile); unset($configFile); /** Arguments to be passed to the CSR **/ $configArgs = array( 'config' =&gt; $config, 'encrypt_key' =&gt; false, 'private_key_type' =&gt; OPENSSL_KEYTYPE_RSA, 'subjectAltName' =&gt; $request-&gt;extensionsSubjectAltName, 'digest_alg' =&gt; $request-&gt;signatureTypeSN ); // Generate REQ and his corresponding Private Key. $keygen = openssl_pkey_new(); $reqgen = openssl_csr_new($dn, $keygen, $configArgs); // Export Private Key to string. openssl_pkey_export($keygen, $privateKey); // Export CSR to string. openssl_csr_export($reqgen, $certificateServerRequest); // Signing CSR. Location of CA Pub/Priv certificates. $cacert = file_get_contents('/opt/ca/cacert.pem'); $pkeyid = array(file_get_contents('/opt/ca/private/cakey.pem'), $request-&gt;password ); $configArgs = array( 'config' =&gt; $config, 'encrypt_key' =&gt; false, 'private_key_bits' =&gt; (int)$request-&gt;keyLength, 'private_key_type' =&gt; OPENSSL_KEYTYPE_RSA, 'digest_alg' =&gt; $request-&gt;signatureTypeSN, 'x509_extensions' =&gt; $request-&gt;extensionsExtendedKeyUsage); // Insert serial number. $serialNumber = random_int(160000000001, 170000000001); // Sign Certificate Server Request. $certgen = openssl_csr_sign($certificateServerRequest , $cacert, $pkeyid, $request-&gt;validityPeriod, $configArgs, $serialNumber); // Export signed certificate to string variable. openssl_x509_export($certgen, $publicKey); // Clean SAN DNS entries. shell_exec(\"sudo /opt/subjectAltNameRemoval.sh 2&gt;&amp;1\"); // Parse certificate data. $certParser = openssl_x509_parse($publicKey); // Include certificate parse data in request. $request['subjectCommonName'] = $certParser['subject']['CN']; $request['subjectContry'] = $certParser['subject']['C']; $request['subjectState'] = $certParser['subject']['ST']; $request['subjectOrganization'] = $certParser['subject']['O']; $request['subjectOrganizationUnit'] = $certParser['subject']['OU']; $request['hash'] = $certParser['hash']; $request['issuerCN'] = $certParser['issuer']['CN']; $request['issuerOrganization'] = $certParser['issuer']['O']; $request['issuerOrganizationUnit'] = $certParser['issuer']['OU']; $request['version'] = $certParser['version']; $request['serialNumber'] = $serialNumber; //$request['serialNumberHex'] = $serialNumberHex; $request['validFrom'] = $certParser['validFrom']; $request['validTo'] = $certParser['validTo']; $request['validFrom_time_t'] = $certParser['validFrom_time_t']; $request['validTo_time_t'] = $certParser['validTo_time_t']; $request['signatureTypeSN'] = $certParser['signatureTypeSN']; $request['signatureTypeLN'] = $certParser['signatureTypeLN']; $request['signatureTypeNID'] = $certParser['signatureTypeNID']; $request['purposes'] = null; $request['extensionsBasicConstraints'] = $certParser['extensions']['basicConstraints']; $request['extensionsKeyUsage'] = $certParser['extensions']['keyUsage']; $request['extensionsExtendedKeyUsage'] = $certParser['extensions']['extendedKeyUsage']; $request['extensionsSubjectKeyIdentifier'] = $certParser['extensions']['subjectKeyIdentifier']; $request['extensionsAuthorityKeyIdentifier'] = $certParser['extensions']['authorityKeyIdentifier']; $request['extensionsSubjectAltName'] = $certParser['extensions']['subjectAltName']; $request['extensionsCrlDistributionPoints'] = $certParser['extensions']['crlDistributionPoints']; $request['certificateServerRequest'] = $certificateServerRequest; $request['publicKey'] = $publicKey; $request['privateKey'] = $privateKey; $request['status'] = 'Valid'; $request['p12'] = null; // Convert dates. //$validFrom_time_t = date(DATE_RFC2822, $certParser['validFrom_time_t']); $validTo_time_t = date(DATE_RFC2822, $certParser['validTo_time_t']); $expiryDate = Carbon::parse(Carbon::now())-&gt;diffInDays($validTo_time_t); $request['expiryDate'] = $expiryDate; //dd($request['expiryDate']); Cert::create($request-&gt;all()); return redirect()-&gt;route('admin.certs.index'); } public function edit(Cert $cert) { abort_unless(\\Gate::allows('certificate_edit'), 403); return view('admin.certs.edit', compact('cert')); } public function update(UpdateCertificate $request, Cert $cert) { abort_unless(\\Gate::allows('certificate_edit'), 403); // $cert-&gt;update($request-&gt;all()); $cert-&gt;update($request-&gt;all('certificateServerRequest')); $cert-&gt;update($request-&gt;all('publicKey')); $cert-&gt;update($request-&gt;all('privateKey')); $cert-&gt;update($request-&gt;all('comments')); /** logic to update all DB tables when PublicKey change. **/ if($request-&gt;all('publicKey') != '') { $certParser = openssl_x509_parse($publicKey); //dd($certParser); $name = $certParser['name']; $subject = $certParser['subject']; $subjectCommonName = $certParser['subject']['CN']; //$subjectEmail = $certParser['subject']['emailAddress']; $subjectContry = $certParser['subject']['C']; //$subjectState = $certParser['subject']['ST']; //$subjectLocality = $certParser['subject']['L']; $subjectOrganization = $certParser['subject']['O']; //$subjectOrganizationUnit = $certParser['subject']['OU']; $hash = $certParser['hash']; $issuer = $certParser['issuer']; if(empty($issuer['CN'])) { $issuerCN = null; } else{ $issuerCN = $certParser['issuer']['CN']; } if(empty($issuer['C'])) { $issuerContry = null; } else { $issuerContry = $certParser['issuer']['C']; } if(empty($issuer['O'])) { $issuerOrganization = null; } else { $issuerOrganization = $certParser['issuer']['O']; } //$issuerCN = $certParser['issuer']['CN']; //$issuerContry = $certParser['issuer']['C']; //$issuerState = $certParser['issuer']['ST']; //$issuerLocality = $certParser['issuer']['L']; //$issuerOrganization = $certParser['issuer']['O']; //$issuerOrganizationUnit = $certParser['issuer']['OU']; $version = $certParser['version']; $serialNumber = $certParser['serialNumber']; $serialNumberHex = $certParser['serialNumberHex']; $validFrom = $certParser['validFrom']; $validTo = $certParser['validTo']; $validFrom_time_t = $certParser['validFrom_time_t']; $validTo_time_t = $certParser['validTo_time_t']; $signatureTypeSN = $certParser['signatureTypeSN']; $signatureTypeLN = $certParser['signatureTypeLN']; $signatureTypeNID = $certParser['signatureTypeNID']; //$purposes = $certParser['purposes']['1']['2']; dd($purposes); $purposes = 'Not Implemented'; $extensions = $certParser['extensions']; $extensionsBasicConstraints = $certParser['extensions']['basicConstraints']; //$extensionsNsCertType = $certParser['extensions']['nsCertType']; //$extensionsKeyUsage = $certParser['extensions']['keyUsage']; if(empty($certParser['extensions']['keyUsage'])){ $extensionsKeyUsage = null; } else { $extensionsKeyUsage = $certParser['extensions']['keyUsage']; } if(empty($certParser['extensions']['extendedKeyUsage'])){ $extensionsExtendedKeyUsage = null; } else { $extensionsExtendedKeyUsage = $certParser['extensions']['extendedKeyUsage']; } //$extensionsExtendedKeyUsage = $certParser['extensions']['extendedKeyUsage']; //$extensionsSubjectKeyIdentifier = $certParser['extensions']['subjectKeyIdentifier']; if(empty($certParser['extensions']['authorityKeyIdentifier'])){ $extensionsAuthorityKeyIdentifier = null; } else { $extensionsAuthorityKeyIdentifier = $certParser['extensions']['authorityKeyIdentifier']; } //$extensionsAuthorityKeyIdentifier = $certParser['extensions']['authorityKeyIdentifier']; $extensionsSubjectAltName = $certParser['extensions']['subjectAltName']; $extensionsCrlDistributionPoints = $certParser['extensions']['crlDistributionPoints']; // End Certificate Info $expiryDate = round((time() - $validTo_time_t) / (60*60*24)); // In days $status = 'Valid'; // for testing purposes $p12 = null; // Place the certificate publickey in public-keys to be monitored. openssl_x509_export_to_file($publicKey, storage_path('public-keys/' . $subjectCommonName . '.crt')); // Insert new PublicKey and update data // Cert::where('subjectCommonName', $subjectCommonName)-&gt;update(['publicKey' =&gt; $publicKey]); Cert::where('subjectCommonName', $subjectCommonName)-&gt;update([ //'subjectCommonName' =&gt; $subjectCommonName, //'subjectEmail' =&gt; $subjectEmail, 'subjectContry' =&gt; $subjectContry, //'subjectState' =&gt; $subjectState, //'subjectLocality' =&gt; $subjectLocality, 'subjectOrganization' =&gt; $subjectOrganization, //'subjectOrganizationUnit' =&gt; $subjectOrganizationUnit, 'hash' =&gt; $hash, 'issuerCN' =&gt; $issuerCN, 'issuerContry' =&gt; $issuerContry, //'issuerState' =&gt; $issuerState, //'issuerLocality' =&gt; $issuerLocality, 'issuerOrganization' =&gt; $issuerOrganization, //'issuerOrganizationUnit' =&gt; $issuerOrganizationUnit, 'version' =&gt; $version, 'serialNumber' =&gt; $serialNumber, 'serialNumberHex' =&gt; $serialNumberHex, 'validFrom' =&gt; $validFrom, 'validTo' =&gt; $validTo, 'validFrom_time_t' =&gt; $validFrom_time_t, 'validTo_time_t' =&gt; $validTo_time_t, 'signatureTypeSN' =&gt; $signatureTypeSN, 'signatureTypeLN' =&gt; $signatureTypeLN, 'signatureTypeNID' =&gt; $signatureTypeNID, 'purposes' =&gt; $purposes, 'extensionsBasicConstraints' =&gt; $extensionsBasicConstraints, //'extensionsNsCertType' =&gt; $extensionsNsCertType, 'extensionsKeyUsage' =&gt; $extensionsKeyUsage, 'extensionsExtendedKeyUsage' =&gt; $extensionsExtendedKeyUsage, //'extensionsSubjectKeyIdentifier' =&gt; $extensionsSubjectKeyIdentifier, 'extensionsAuthorityKeyIdentifier' =&gt; $extensionsAuthorityKeyIdentifier, 'extensionsSubjectAltName' =&gt; $extensionsSubjectAltName, 'extensionsCrlDistributionPoints' =&gt; $extensionsCrlDistributionPoints, //'certificateServerRequest' =&gt; $certificateServerRequest, 'publicKey' =&gt; $publicKey, // 'privateKey' =&gt; $privateKey, 'p12' =&gt; $p12, 'status' =&gt; $status, 'expiryDate' =&gt; $expiryDate, //'email' =&gt; $email, 'comments' =&gt; $comments ]); } /** Also, before updating csr/pub/priv keys, make a Keymatch for more security. **/ return redirect()-&gt;route('admin.certs.index'); } public function show(Cert $cert) { abort_unless(\\Gate::allows('certificate_show'), 403); // Convert dates validFrom and validTo to show them properly in view. $certs = Cert::all(); $validFrom_time_t = date(DATE_RFC2822, $cert-&gt;validFrom_time_t); $validTo_time_t = date(DATE_RFC2822, $cert-&gt;validTo_time_t); //$validFrom = date(DATE_RFC2822, $certParser['validFrom']); //dd($validFrom_time_t, $validTo_time_t); return view('admin.certs.show', compact('cert', 'validFrom_time_t', 'validTo_time_t')); } public function destroy(Cert $cert) { abort_unless(\\Gate::allows('certificate_delete'), 403); $cert-&gt;delete(); return back(); } public function massDestroy(MassDestroyCertificateKeyPair $request) { Cert::whereIn('id', request('ids'))-&gt;delete(); return response(null, 204); } } . ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code/controllers/#certificatescontrollerphp",
    "relUrl": "/docs/certificate-authority/code/controllers/#certificatescontrollerphp"
  },"27": {
    "doc": "Controllers Snippets",
    "title": "SigningRequestController.php",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code/controllers/#signingrequestcontrollerphp",
    "relUrl": "/docs/certificate-authority/code/controllers/#signingrequestcontrollerphp"
  },"28": {
    "doc": "Controllers Snippets",
    "title": "NewSigningRequestController.php",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code/controllers/#newsigningrequestcontrollerphp",
    "relUrl": "/docs/certificate-authority/code/controllers/#newsigningrequestcontrollerphp"
  },"29": {
    "doc": "Controllers Snippets",
    "title": "JarSigningController.php",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code/controllers/#jarsigningcontrollerphp",
    "relUrl": "/docs/certificate-authority/code/controllers/#jarsigningcontrollerphp"
  },"30": {
    "doc": "Controllers Snippets",
    "title": "AuthenticodeController.php",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code/controllers/#authenticodecontrollerphp",
    "relUrl": "/docs/certificate-authority/code/controllers/#authenticodecontrollerphp"
  },"31": {
    "doc": "Controllers Snippets",
    "title": "Controllers Snippets",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code/controllers/",
    "relUrl": "/docs/certificate-authority/code/controllers/"
  },"32": {
    "doc": "Download",
    "title": "Download",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/download/",
    "relUrl": "/docs/certificate-authority/download/"
  },"33": {
    "doc": "Download",
    "title": " .OVA image",
    "content": "Tested with VMWare API v.15.0 . Decryption Key: y2TYyAQbWSHBfX0ozHHlI1CwLhrSlapt90jpfAhR21 . SHA256 Checksum: 5ca2bce6c05473dd584a4efc8f18b81643bcf671c1ce07bba4114340dfaf3a81 . ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/download/#-ova-image",
    "relUrl": "/docs/certificate-authority/download/#-ova-image"
  },"34": {
    "doc": "Features",
    "title": "Certificate Authority features",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/features/#certificate-authority-features",
    "relUrl": "/docs/certificate-authority/features/#certificate-authority-features"
  },"35": {
    "doc": "Features",
    "title": "Table of contents",
    "content": ". | Keypair creation | Create CSR | Sign CSR | Create PFX/P12 archives | Check CSR/Cert/key matches | Expiry notifications | . ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/features/#table-of-contents",
    "relUrl": "/docs/certificate-authority/features/#table-of-contents"
  },"36": {
    "doc": "Features",
    "title": "Keypair creation",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/features/#keypair-creation",
    "relUrl": "/docs/certificate-authority/features/#keypair-creation"
  },"37": {
    "doc": "Features",
    "title": "Create CSR",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/features/#create-csr",
    "relUrl": "/docs/certificate-authority/features/#create-csr"
  },"38": {
    "doc": "Features",
    "title": "Sign CSR",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/features/#sign-csr",
    "relUrl": "/docs/certificate-authority/features/#sign-csr"
  },"39": {
    "doc": "Features",
    "title": "Create PFX/P12 archives",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/features/#create-pfxp12-archives",
    "relUrl": "/docs/certificate-authority/features/#create-pfxp12-archives"
  },"40": {
    "doc": "Features",
    "title": "Check CSR/Cert/key matches",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/features/#check-csrcertkey-matches",
    "relUrl": "/docs/certificate-authority/features/#check-csrcertkey-matches"
  },"41": {
    "doc": "Features",
    "title": "Expiry notifications",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/features/#expiry-notifications",
    "relUrl": "/docs/certificate-authority/features/#expiry-notifications"
  },"42": {
    "doc": "Features",
    "title": "Features",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/features/",
    "relUrl": "/docs/certificate-authority/features/"
  },"43": {
    "doc": "Home",
    "title": "Everything must be made as simple as possible. But not simpler.",
    "content": "Lastest updates . # Certificate Authority - Certificate status in Dashboard (Valid/Expiring...) are now calculated correctly. - When CodeSigning (JAR / Microsoft binaries) archives are now saved on disk. # Compliance check script - Checks if application is hsowing te default webserver page. - Checks if error reporting is enabled in application. ",
    "url": "https://lopeaa.github.io/#everything-must-be-made-as-simple-as-possible-but-not-simpler",
    "relUrl": "/#everything-must-be-made-as-simple-as-possible-but-not-simpler"
  },"44": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "https://lopeaa.github.io/",
    "relUrl": "/"
  },"45": {
    "doc": "Layout",
    "title": "Layout Utilities",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/utilities/layout/#layout-utilities",
    "relUrl": "/docs/utilities/layout/#layout-utilities"
  },"46": {
    "doc": "Layout",
    "title": "Table of contents",
    "content": ". | Spacing | Horizontal Alignment | Vertical Alignment | Display | . ",
    "url": "https://lopeaa.github.io/docs/utilities/layout/#table-of-contents",
    "relUrl": "/docs/utilities/layout/#table-of-contents"
  },"47": {
    "doc": "Layout",
    "title": "Spacing",
    "content": "These spacers are available to use for margins and padding with responsive utility classes. Combine these prefixes with a screen size and spacing scale to use them responsively. | Classname prefix | What it does | . | .m- | margin | . | .mx- | margin-left, margin-right | . | .my- | margin top, margin bottom | . | .mt- | margin-top | . | .mr- | margin-right | . | .mb- | margin-bottom | . | .ml- | margin-left | . | Classname prefix | What it does | . | .p- | padding | . | .px- | padding-left, padding-right | . | .py- | padding top, padding bottom | . | .pt- | padding-top | . | .pr- | padding-right | . | .pb- | padding-bottom | . | .pl- | padding-left | . Spacing values are based on a 1rem = 16px spacing scale, broken down into these units: . | Spacer/suffix | Size in rems | Rem converted to px | . | 1 | 0.25rem | 4px | . | 2 | 0.5rem | 8px | . | 3 | 0.75rem | 12px | . | 4 | 1rem | 16px | . | 5 | 1.5rem | 24px | . | 6 | 2rem | 32px | . | 7 | 2.5rem | 40px | . | 8 | 3rem | 48px | . | auto | auto | auto | . Use mx-auto to horizontally center elements. Examples . In Markdown, use the {: } wrapper to apply custom classes: . This paragraph will have a margin bottom of 1rem/16px at large screens. {: .mb-lg-4 } This paragraph will have 2rem/32px of padding on the right and left at all screen sizes. {: .px-6 } . ",
    "url": "https://lopeaa.github.io/docs/utilities/layout/#spacing",
    "relUrl": "/docs/utilities/layout/#spacing"
  },"48": {
    "doc": "Layout",
    "title": "Horizontal Alignment",
    "content": "| Classname | What it does | . | .float-left | float: left | . | .float-right | float: right | . | .flex-justify-start | justify-content: flex-start | . | .flex-justify-end | justify-content: flex-end | . | .flex-justify-between | justify-content: space-between | . | .flex-justify-around | justify-content: space-around | . Note: any of the flex- classes must be used on a parent element that has d-flex applied to it. ",
    "url": "https://lopeaa.github.io/docs/utilities/layout/#horizontal-alignment",
    "relUrl": "/docs/utilities/layout/#horizontal-alignment"
  },"49": {
    "doc": "Layout",
    "title": "Vertical Alignment",
    "content": "| Classname | What it does | . | .v-align-baseline | vertical-align: baseline | . | .v-align-bottom | vertical-align: bottom | . | .v-align-middle | vertical-align: middle | . | .v-align-text-bottom | vertical-align: text-bottom | . | .v-align-text-top | vertical-align: text-top | . | .v-align-top | vertical-align: top | . ",
    "url": "https://lopeaa.github.io/docs/utilities/layout/#vertical-alignment",
    "relUrl": "/docs/utilities/layout/#vertical-alignment"
  },"50": {
    "doc": "Layout",
    "title": "Display",
    "content": "Display classes aid in adapting the layout of the elements on a page: . | Class |   | . | .d-block | display: block | . | .d-flex | display: flex | . | .d-inline | display: inline | . | .d-inline-block | display: inline-block | . | .d-none | display: none | . Use these classes in conjunction with the responsive modifiers. Examples . In Markdown, use the {: } wrapper to apply custom classes: . This button will be hidden until medium screen sizes: [ A button ](#url) {: .d-none .d-md-inline-block } These headings will be `inline-block`: ### heading 3 {: .d-inline-block } ### heading 3 {: .d-inline-block } . ",
    "url": "https://lopeaa.github.io/docs/utilities/layout/#display",
    "relUrl": "/docs/utilities/layout/#display"
  },"51": {
    "doc": "Layout",
    "title": "Layout",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/utilities/layout/",
    "relUrl": "/docs/utilities/layout/"
  },"52": {
    "doc": "Models Snippets",
    "title": "Certificate Authority Models",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code/models/#certificate-authority-models",
    "relUrl": "/docs/certificate-authority/code/models/#certificate-authority-models"
  },"53": {
    "doc": "Models Snippets",
    "title": "Table of contents",
    "content": ". ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code/models/#table-of-contents",
    "relUrl": "/docs/certificate-authority/code/models/#table-of-contents"
  },"54": {
    "doc": "Models Snippets",
    "title": "Models Snippets",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code/models/",
    "relUrl": "/docs/certificate-authority/code/models/"
  },"55": {
    "doc": "Operating Systems",
    "title": "Systems OS setup",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/operating-systems#systems-os-setup",
    "relUrl": "/docs/operating-systems#systems-os-setup"
  },"56": {
    "doc": "Operating Systems",
    "title": "Operating Systems",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/operating-systems",
    "relUrl": "/docs/operating-systems"
  },"57": {
    "doc": "Responsive Modifiers",
    "title": "Responsive modifiers",
    "content": "Just the Docs spacing works in conjunction with a variety of modifiers that allow you to target specific screen sizes responsively. Use these in conjunction with spacing and display prefix and suffix classes. | Modifier | Screen size | . | (none) | All screens until the next modifier | . | xs | 320px (20rem) and up | . | sm | 500px (31.25rem) and up | . | md | 740px (46.25rem) and up | . | lg | 1120px (70rem) and up | . | xl | 1400px (87.5rem) and up | . ",
    "url": "https://lopeaa.github.io/docs/utilities/responsive-modifiers/#responsive-modifiers",
    "relUrl": "/docs/utilities/responsive-modifiers/#responsive-modifiers"
  },"58": {
    "doc": "Responsive Modifiers",
    "title": "Responsive Modifiers",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/utilities/responsive-modifiers/",
    "relUrl": "/docs/utilities/responsive-modifiers/"
  },"59": {
    "doc": "Setup",
    "title": "Certificate Authority setup",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/setup/#certificate-authority-setup",
    "relUrl": "/docs/certificate-authority/setup/#certificate-authority-setup"
  },"60": {
    "doc": "Setup",
    "title": "Table of contents",
    "content": ". | Manual setup (Ubuntu 20.04 LTS) . | Pre-requisites | Cloning repository | Create Database . | SQLite database | MySQL database | . | Modify .env file . | .env params for SQLite. | .env params for MySQL. | . | Run Migration | Run Composer and NPM | Login to Dashboard | Recommendations | . | VM .OVA setup . | Recomended requirements | . | . ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/setup/#table-of-contents",
    "relUrl": "/docs/certificate-authority/setup/#table-of-contents"
  },"61": {
    "doc": "Setup",
    "title": "Manual setup (Ubuntu 20.04 LTS)",
    "content": "Pre-requisites . | Package | Version | Docs | . | PHP | 7.4 | Setup instructions | . | NGINX | 1.x | Setup instructions | . | Osslsigncode | Latest | Setup instructions | . | OpenCA | Latest | Setup instructions | . | Curl | Latest | Setup instructions | . Cloning repository . sudo git clone https://github.com/lopeaa/ca-mgmt.git . Create Database . SQLite database . sudo touch database/database.sqlite . MySQL database . CREATE DATABASE db_name; CREATE USER 'db_user'@'localhost' IDENTIFIED BY 'password'; GRANT ALL PRIVILEGES ON * . * TO 'db_user'@'localhost'; FLUSH PRIVILEGES; . Modify .env file . cd ca-mgmt sudo mv .env.example .env sudo pico .env .env params for SQLite. DB_CONNECTION=sqlite DB_DATABASE=/var/www/html/ca-mgmt/database/database.sqlite .env params for MySQL. DB_CONNECTION=mysql DB_HOST=127.0.0.1 DB_PORT=3306 DB_DATABASE=ca-mgmt DB_USERNAME=db_user . Run Migration . sudo php artisan migrate . Run Composer and NPM . sudo composer update . Login to Dashboard . Admin Panel . Recommendations . | Configure HTTPS | . ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/setup/#manual-setup-ubuntu-2004-lts",
    "relUrl": "/docs/certificate-authority/setup/#manual-setup-ubuntu-2004-lts"
  },"62": {
    "doc": "Setup",
    "title": "VM .OVA setup",
    "content": "For easiest setup use the .OVA Image . Recomended requirements . | At least 2GB of RAM | 2 CPU | 20GB of disk storage. | . ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/setup/#vm-ova-setup",
    "relUrl": "/docs/certificate-authority/setup/#vm-ova-setup"
  },"63": {
    "doc": "Setup",
    "title": "Setup",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/setup/",
    "relUrl": "/docs/certificate-authority/setup/"
  },"64": {
    "doc": "Tools",
    "title": "Certificate Authority tools",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/tools/#certificate-authority-tools",
    "relUrl": "/docs/certificate-authority/tools/#certificate-authority-tools"
  },"65": {
    "doc": "Tools",
    "title": "Table of contents",
    "content": ". | Certificate expiry notification | Certificate keymatch | Certificate converter | JAR/MS Authenticode code signing | . ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/tools/#table-of-contents",
    "relUrl": "/docs/certificate-authority/tools/#table-of-contents"
  },"66": {
    "doc": "Tools",
    "title": "Certificate expiry notification",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/tools/#certificate-expiry-notification",
    "relUrl": "/docs/certificate-authority/tools/#certificate-expiry-notification"
  },"67": {
    "doc": "Tools",
    "title": "Certificate keymatch",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/tools/#certificate-keymatch",
    "relUrl": "/docs/certificate-authority/tools/#certificate-keymatch"
  },"68": {
    "doc": "Tools",
    "title": "Certificate converter",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/tools/#certificate-converter",
    "relUrl": "/docs/certificate-authority/tools/#certificate-converter"
  },"69": {
    "doc": "Tools",
    "title": "JAR/MS Authenticode code signing",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/tools/#jarms-authenticode-code-signing",
    "relUrl": "/docs/certificate-authority/tools/#jarms-authenticode-code-signing"
  },"70": {
    "doc": "Tools",
    "title": "Tools",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/tools/",
    "relUrl": "/docs/certificate-authority/tools/"
  },"71": {
    "doc": "Typography",
    "title": "Typography Utilities",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/utilities/typography/#typography-utilities",
    "relUrl": "/docs/utilities/typography/#typography-utilities"
  },"72": {
    "doc": "Typography",
    "title": "Table of contents",
    "content": ". | Font size | Font weight | Line height | Text justification | . ",
    "url": "https://lopeaa.github.io/docs/utilities/typography/#table-of-contents",
    "relUrl": "/docs/utilities/typography/#table-of-contents"
  },"73": {
    "doc": "Typography",
    "title": "Font size",
    "content": "Use the .fs-1 - .fs-10 to set an explicit font-size. | Class | Small screen size font-size | Large screen size font-size | . | .fs-1 | 9px | 10px | . | .fs-2 | 11px | 12px | . | .fs-3 | 12px | 14px | . | .fs-4 | 14px | 16px | . | .fs-5 | 16px | 18px | . | .fs-6 | 18px | 24px | . | .fs-7 | 24px | 32px | . | .fs-8 | 32px | 38px | . | .fs-9 | 38px | 42px | . | .fs-10 | 42px | 48px | . Font size 1 . Font size 2 . Font size 3 . Font size 4 . Font size 5 . Font size 6 . Font size 7 . Font size 8 . Font size 9 . Font size 10 . In Markdown, use the `{: }` wrapper to apply custom classes: Font size 1 {: .fs-1 } Font size 2 {: .fs-2 } Font size 3 {: .fs-3 } Font size 4 {: .fs-4 } Font size 5 {: .fs-5 } Font size 6 {: .fs-6 } Font size 7 {: .fs-7 } Font size 8 {: .fs-8 } Font size 9 {: .fs-9 } Font size 10 {: .fs-10 } . ",
    "url": "https://lopeaa.github.io/docs/utilities/typography/#font-size",
    "relUrl": "/docs/utilities/typography/#font-size"
  },"74": {
    "doc": "Typography",
    "title": "Font weight",
    "content": "Use the .fw-300 - .fw-700 to set an explicit font-size. Font weight 300 . Font weight 400 . Font weight 500 . Font weight 700 . In Markdown, use the `{: }` wrapper to apply custom classes: Font weight 300 {: .fw-300 } Font weight 400 {: .fw-400 } Font weight 500 {: .fw-500 } Font weight 700 {: .fw-700 } . ",
    "url": "https://lopeaa.github.io/docs/utilities/typography/#font-weight",
    "relUrl": "/docs/utilities/typography/#font-weight"
  },"75": {
    "doc": "Typography",
    "title": "Line height",
    "content": "Use the lh- classes to explicitly apply line height to text. | Class | line-height value | Notes | . | .lh-0 | 0 |   | . | .lh-tight | 1.1 | Default for headings | . | .lh-default | 1.4 | Default for body (paragraphs) | . No Line height No Line height . Tight line height Tight line height . Default line height Default line height . In Markdown, use the `{: }` wrapper to apply custom classes: No Line height No Line height {: .lh-0 } Tight line height Tight line height {: .lh-tight } Default line height Default line height {: .fh-default } . ",
    "url": "https://lopeaa.github.io/docs/utilities/typography/#line-height",
    "relUrl": "/docs/utilities/typography/#line-height"
  },"76": {
    "doc": "Typography",
    "title": "Text justification",
    "content": "By default text is justified left. Use these text- classes to override settings: . | Class | What it does | . | .text-left | text-align: left | . | .text-right | text-align: right | . | .text-center | text-align: center | . ",
    "url": "https://lopeaa.github.io/docs/utilities/typography/#text-justification",
    "relUrl": "/docs/utilities/typography/#text-justification"
  },"77": {
    "doc": "Typography",
    "title": "Typography",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/utilities/typography/",
    "relUrl": "/docs/utilities/typography/"
  },"78": {
    "doc": "Ubuntu 20.04",
    "title": " Ubuntu 20.04 server setup",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/operating-systems/ubuntu/#-ubuntu-2004-server-setup",
    "relUrl": "/docs/operating-systems/ubuntu/#-ubuntu-2004-server-setup"
  },"79": {
    "doc": "Ubuntu 20.04",
    "title": "Table of contents",
    "content": ". | Setup instructions . | Create sudo user + disable root login | Set system-wide Proxy | Set Proxy for APT package manager | Set Proxy for Wget | LEMP + Curl + Zip | Composer + NPM | MariaDB | Setup Nginx + Let’s encrypt | Default conf file | . | . ",
    "url": "https://lopeaa.github.io/docs/operating-systems/ubuntu/#table-of-contents",
    "relUrl": "/docs/operating-systems/ubuntu/#table-of-contents"
  },"80": {
    "doc": "Ubuntu 20.04",
    "title": "Setup instructions",
    "content": "Create sudo user + disable root login . adduser &lt;username&gt; usermode -aG sudo &lt;username&gt; sudo &lt;username&gt; pico /etc/ssh/sshd_config --- #PermitRootLogin **no** --- . Set system-wide Proxy . pico /etc/profile.d/proxy.sh . # Should apply for all users # export http_proxy=\"http://10.10.1.10:8080/\" export https_proxy=\"http://10.10.1.10:8080/\" export ftp_proxy=\"http://10.10.1.10:8080/\" export no_proxy=\"127.0.0.1,localhost\" # For curl export HTTP_PROXY=\"http://10.10.1.10:8080/\" export HTTPS_PROXY=\"http://10.10.1.10:8080/\" export FTP_PROXY=\"http://10.10.1.10:8080/\" export NO_PROXY=\"127.0.0.1,localhost\" . chmod +x /etc/profile.d/proxy.sh . source /etc/profile.d/proxy.sh env | grep -i proxy . Set Proxy for APT package manager . pico /etc/profile.d/proxy.sh . # No authenticated vim /etc/apt/apt.conf.d/80proxy Acquire::http::proxy \"http://10.10.1.10:8080/\"; Acquire::https::proxy \"https://10.10.1.10:8080/\"; Acquire::ftp::proxy \"ftp://10.10.1.10:8080/\"; # Authenticated Acquire::http::proxy \"http://&lt;username&gt;:&lt;password&gt;@&lt;proxy&gt;:&lt;port&gt;/\"; Acquire::https::proxy \"https://&lt;username&gt;:&lt;password&gt;@&lt;proxy&gt;:&lt;port&gt;/\"; Acquire::ftp::proxy \"ftp://&lt;username&gt;:&lt;password&gt;@&lt;proxy&gt;:&lt;port&gt;/\"; . Set Proxy for Wget . pico ~/.wgetrc . use_proxy = on http_proxy = http://10.10.1.10:8080/ https_proxy = http://10.10.1.10:8080/ ftp_proxy = http://10.10.1.10:8080/ . LEMP + Curl + Zip . apt update apt install -y php-mbstring php-xml php-fpm php-zip php-common php-fpm php-cli unzip curl nginx . Composer + NPM . apt install composer composer diagnose apt install npm npm install &amp;&amp; npm run . MariaDB . apt install -y mariadb-client mariadb-server systemctl enable --now mariadb.service mysql_secure_installation ### Create a database CREATE DATABASE db_name; CREATE USER 'newuser'@'localhost' IDENTIFIED BY 'password'; GRANT ALL PRIVILEGES ON * . * TO 'newuser'@'localhost'; FLUSH PRIVILEGES; . Setup Nginx + Let’s encrypt . ### Certbot plugin for Nginx. apt install certbot python3-certbot-nginx sudo nano /etc/nginx/sites-available/default ... server_name example.com www.example.com; ... sudo nginx -t sudo systemctl reload nginx sudo ufw allow 'Nginx Full' sudo ufw delete allow 'Nginx HTTP' sudo ufw status sudo certbot --nginx -d domain.com -d www.domain.com sudo systemctl status certbot.timer sudo certbot renew --dry-run . ## Test it. https://www.ssllabs.com/ssltest/analyze.html?d=domain.com . Default conf file . server { listen 80; server_name example.com; root /var/www/html/example/public; . add_header X-Frame-Options \"SAMEORIGIN\"; add_header X-XSS-Protection \"1; mode=block\"; add_header X-Content-Type-Options \"nosniff\"; index index.php; charset utf-8; location / { try_files $uri $uri/ /index.php?$query_string; } location = /favicon.ico { access_log off; log_not_found off; } location = /robots.txt { access_log off; log_not_found off; } error_page 404 /index.php; location ~ \\.php$ { fastcgi_pass unix:/var/run/php/php7.4-fpm.sock; fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name; include fastcgi_params; } location ~ /\\.(?!well-known).* { deny all; } } ### Enable Nginx config file ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/ ``` . ",
    "url": "https://lopeaa.github.io/docs/operating-systems/ubuntu/#setup-instructions",
    "relUrl": "/docs/operating-systems/ubuntu/#setup-instructions"
  },"81": {
    "doc": "Ubuntu 20.04",
    "title": "Ubuntu 20.04",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/operating-systems/ubuntu/",
    "relUrl": "/docs/operating-systems/ubuntu/"
  },"82": {
    "doc": "Utilities",
    "title": "Utilities",
    "content": "CSS utility classes come in handy when you to want to override default styles to create additional whitespace (margins/padding), correct unexpected shifts in font size or weight, add color, or hide (or show) something at a specific screen size. ",
    "url": "https://lopeaa.github.io/docs/utilities",
    "relUrl": "/docs/utilities"
  },"83": {
    "doc": "View Snippets",
    "title": "Certificate Authority Views",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code/views/#certificate-authority-views",
    "relUrl": "/docs/certificate-authority/code/views/#certificate-authority-views"
  },"84": {
    "doc": "View Snippets",
    "title": "Table of contents",
    "content": ". ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code/views/#table-of-contents",
    "relUrl": "/docs/certificate-authority/code/views/#table-of-contents"
  },"85": {
    "doc": "View Snippets",
    "title": "View Snippets",
    "content": " ",
    "url": "https://lopeaa.github.io/docs/certificate-authority/code/views/",
    "relUrl": "/docs/certificate-authority/code/views/"
  }
}
